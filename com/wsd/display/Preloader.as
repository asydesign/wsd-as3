package com.wsd.display{	import com.adobe.images.JPGEncoder;		import com.wsd.Base;	import com.wsd.View;		import flash.display.Loader;	import flash.events.Event;	import flash.net.URLRequest;	import flash.display.Bitmap;	import flash.display.MovieClip;		public class Preloader extends View	{		private static var _$	:Preloader;		public var loaded:Boolean = false;		private var imagesCount:int;		private var loadedCount:int;				public function Preloader()		{		}				public function load(imagesArr:Array):void		{			var _this = this;						for (var i:String in imagesArr)			{				Base.log('Preloader::load(name: ' + i + ' url: ' + imagesArr[i] + ')');				var request:URLRequest = new URLRequest(imagesArr[i]);				var loader:Loader = new Loader();				loader.name = i + '_loader';				loader.load(request);				++imagesCount;				loader.contentLoaderInfo.addEventListener(Event.COMPLETE, function( e:Event ):void				{					if(e.target.content is Bitmap) {						var clonedData:Bitmap = new Bitmap();						clonedData.bitmapData = e.target.content.bitmapData;						clonedData.name = e.target.loader.name.replace('_loader', '');						addChild(clonedData);					} else {						addChild(loader);					}										Base.log('Preloader::loaded(name: ' + e.target.loader.name.replace('_loader', '') + ')');										++_this.loadedCount;										if (_this.loadedCount == _this.imagesCount) _this.loaded = true;				});			}		}				public function getImage(image:String):*		{			return this[image];		}				public function clone(code):*		{			var mc:MovieClip = new MovieClip;			var bitmap:Bitmap = new Bitmap();			bitmap.bitmapData = Bitmap(getChildByName(code)).bitmapData.clone();			mc.addChild(bitmap);			mc.name = code;			return mc;		}				public static function get $():Preloader 		{			if (!_$)				_$ = new Preloader();			return _$;		}				public static function set $(value:Preloader):void 		{			_$ = value;		}	}}